---
job_id: test1

sail:

  model_path: null

  estimators:
    - linear_reg: &linear_reg 
        class: sail.models.river.linear_model.LinearRegression
        params:
          - name: optimizer
            class: river.optim.SGD
            params:
              - name: lr
                value: 0.1
          - name: intercept_init
            value: 0.15
            
    - random_forest: &random_forest
        class: sail.models.river.forest.AdaptiveRandomForestRegressor
        params:
          - name: n_models
            value: 20

  steps: &steps
    - type: tuple
      name: select
      class: sail.transformers.river.compose.Select
      params:
        - name: keys
          value:
            - 'wind_speed'
            - 'pitch_angle'
            - 'rotor_speed'
            - 'cos_nacelle_dir'
            - 'sin_nacelle_dir'
            - 'cos_wind_dir'
            - 'sin_wind_dir'
            - 'nacelle_direction'
            - 'wind_direction'
    - type: tuple
      name: Imputer
      class: sklearn.impute.SimpleImputer
      params:
        - name: missing_values
          class: numpy.nan
        - name: strategy
          value: mean
    - type: tuple
      name: standard_scalar
      class: sail.transformers.river.preprocessing.StandardScaler
    - type: tuple
      name: regressor
      value: passthrough

  sail_pipeline:
    - name: steps
      ref:  *steps
    - name: scoring
      value: 
        - R2
        - MSE
        - MAE
        - RMSE
    - name: verbosity_level
      value: 1
    
  parameter_grid:
    - - name: regressor
        ref:  
          - *linear_reg
      - name: regressor__l2
        value:
          - 0.1
          - 0.9
      - name: regressor__intercept_init
        value:
          - 0.2
          - 0.5
    - - name: regressor
        ref: 
          - *random_forest
      - name: regressor__n_models
        value:
          - 10
          - 15
          - 20

  search_method: SAILTuneGridSearchCV
  search_data_size: 500
  search_method_params:
    - name: verbose
      value: 1
    - name: num_cpus_per_trial
      value: 1
    # - name: n_trials # only to be use with search_method:SAILTuneSearchCV
    #   value: 8
    - name: max_iters
      value: 1
    - name: early_stopping
      value: false
    - name: mode
      value: max
    - name: scoring
      value: r2
    - name: pipeline_auto_early_stop
      value: false
    - name: keep_best_configurations
      value: 2
    # - name: cluster_address
    #   value: "ray://ray-cluster-head-svc:10001"
    # - name: namespace
    #   value: sail-tune
    # - name: runtime_env
    #   params:
    #     - name: py_modules 
    #       module: 
    #         - sail     
    #     - name: pip 
    #       value:
    #         - "dill"
    #         - "seaborn==0.12.2"
    #         - "ipython"
    #         - "logzero"
    #         - "tune_sklearn"
    #         - "numpy==1.25.2"
    #         - "river==0.18.*"
    #         - "matplotlib==3.7.2"
    #         - "scikit-learn==1.3.0"
    #         - "tensorboard"
    #         - "torch==2.0.1"

  incremental_training: true

  drift_detector:
    class: sail.drift_detection.drift_detector.SAILDriftDetector
    params:
    - name: model
      class: river.drift.binary.EDDM
    - name: drift_param
      value: difference

  pipeline_strategy: DetectAndIncrement
  verbosity_level: 1
  verbosity_interval: 1 # default is null
  tensorboard_log_dir: /data
  tracer:
    otlp_endpoint: http://83.212.75.52:31318
    web_interface: http://master.more2020.eu/:31686

data_stream:
  source: modelardb # modelardb or local_file
  model_table_or_path: wind_turbine # set path to a file for local_file
  target: active_power
  timestamp_col: datetime 
  time_interval: null # null means default granularity [S, T, M]
  selected_features: null # empty means use all features
  classes: [] # only applicable for classification problem and when incremental_training is enabled
  from_date: null
  to_date: null
  data_limit: 1000 # put null for all data
  data_batch_size: 250
  data_ingestion_freq: 0 #ingestion frequency in sec

save_model_after_training: true
